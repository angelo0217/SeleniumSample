def remote = [:]
	remote.name = "node-1"
	remote.host = "${dockerIp}"
	remote.allowAnyHosts = true

def testBasic() {
    def command = """{
        \"serverIp\" : \"${serverIp}\",
        \"range\":\"${range}\",
        \"name\":\"${name}\",
        \"age\":${age}
    }"""

    response = httpRequest (consoleLogResponseBody: true,
    contentType: 'APPLICATION_JSON',
    httpMode: 'POST',
    connectionTimeout: 60,
    requestBody: command,
    url: "${testUrl}",
    validResponseCodes: '200',
    validResponseContent: '"msg":"success"')
    return response
}
node {
    stage('TestWeb'){
        testBasic()
    }
    stage('git clone'){
   		withCredentials([usernamePassword(credentialsId: 'deanGitLink', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
   		    withEnv(['PATH+EXTRA=/usr/sbin:/usr/bin:/sbin:/bin']) {
   		        sh 'echo ${GIT_USERNAME}'
   			    sh 'git clone --single-branch --branch ${branch} https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/angelo0217/Springboot2Demo.git'
   		        }
   		    }
        }
      stage('maven build'){
   		withEnv(['PATH+EXTRA=/usr/sbin:/usr/bin:/sbin:/bin']) {
   		    sh 'cd Springboot2Demo'
   		    dir ('Springboot2Demo') {
   		        sh 'pwd'
   			    sh 'mvn clean package -Dmaven.test.skip=true'
   		    }
   		}
      }

       withCredentials([usernamePassword(credentialsId: 'MainMachine', passwordVariable: 'password', usernameVariable: 'user')]) {
   		remote.user = user
   		remote.password = password
   		stage('shutdown docker'){
   		    try {
   			    sshCommand remote: remote, command: 'docker stop basic && docker rm basic && docker rmi demo/basic && cd /opt/vms/ && rm -rf *';
   			}catch (exc) {
                   echo 'shutdown docker error'
               }
   		}
   		stage('move jar'){
               //sshCommand remote: remote, command: 'for i in {1..5}; do echo -n \"Loop \$i \"; date ; sleep 1; done'
   			sshPut remote: remote, from: '/var/jenkins_home/workspace/testPPL/Sp2DemoPrj/target/basic-1.0-SNAPSHOT.jar', into: '/opt/vms'
   			sshPut remote: remote, from: '/var/jenkins_home/workspace/testPPL/Sp2DemoPrj/doc/Dockerfile', into: '/opt/vms'
   		}
   		stage('build docker'){
   			sshCommand remote: remote, command: 'cd /opt/vms/ && docker build -t="demo/basic" . && docker run -itd -v /opt/vms/log:/workspace/logs --name basic -d -p 12345:8080 demo/basic'
   		}
    }
}
